

select A.course_cd, A.level_cd_count, case when B.course_cd > 0 then 1 else 0 end as done_status
from (
    select A.course_cd, count(A.level_cd) as level_cd_count
    from (
        select ll.course_cd, ls.level_cd
        from m_user u
        inner join t_lesson_schedule ls on ls.member_id = u.id
        inner join m_lesson_level ll on ll.level_cd = ls.level_cd
        where u.mail_address = 'y.kimoto.ge+501@gmail.com'
              and ls.schedule_states_cd = 3
        group by ll.course_cd, ls.level_cd
        order by ll.course_cd, ls.level_cd
    ) A
    group by A.course_cd
    order by A.course_cd
) A
left join (
            select course_cd, count(level_cd) as level_cd_count
            from m_lesson_level
            group by course_cd
            order by course_cd
        ) B on B.course_cd = A.course_cd and B.level_cd_count = A.level_cd_count
        
        
select A.course_cd, A.level_cd_count, case when B.course_cd > 0 then 1 else 0 end as done_status
from (
    select A.course_cd, count(A.level_cd) as level_cd_count
    from (
        select ll.course_cd, ls.level_cd
        from m_user u
        inner join t_lesson_schedule ls on ls.member_id = u.id
        inner join m_lesson_level ll on ll.level_cd = ls.level_cd
        where u.mail_address = 'y.kimoto.ge+501@gmail.com'
              and ls.schedule_states_cd = 3
        group by ll.course_cd, ls.level_cd
    ) A
    group by A.course_cd
) A
left join (
            select course_cd, count(level_cd) as level_cd_count
            from m_lesson_level
            group by course_cd
        ) B on B.course_cd = A.course_cd and B.level_cd_count = A.level_cd_count        
        

select course_cd, count(level_cd) as level_cd_count
from m_lesson_level
group by course_cd
order by course_cd;

select *
from m_lesson_level
where level_cd = 3;

select *
from m_lesson_course;


select u.mail_address, ls.*
from m_user u
inner join t_lesson_schedule ls on ls.instructor_id = u.id
limit 100;

Phamthanhsang19061994@gmail.com


select A.user_id, A.mail_address, A.course_cd, A.level_cd_count, case when B.course_cd > 0 then 1 else 0 end as done_status
from (
    select A.user_id, A.mail_address, A.course_cd, count(A.level_cd) as level_cd_count
    from (
        select distinct u.id as user_id, u.mail_address, ll.course_cd, ls.level_cd
        from m_user u
        inner join t_lesson_schedule ls on ls.member_id = u.id
        inner join m_lesson_level ll on ll.level_cd = ls.level_cd
        group by u.id, u.mail_address, ll.course_cd, ls.level_cd
    ) A
    group by A.user_id, A.mail_address, A.course_cd
) A
inner join (
            select course_cd, count(level_cd) as level_cd_count
            from m_lesson_level
            group by course_cd
        ) B on B.course_cd = A.course_cd and B.level_cd_count = A.level_cd_count
        

select *
from m_lesson_course

=======


select A.*, B.Count_Unfinished
from (
        select mu.id, mu.nickname, count(distinct a.material_cd) as Count_Total
        from  m_user mu
        inner join t_lesson_schedule b on b.schedule_states_cd =3 and b.member_id = mu.id
        inner join m_lesson_contents a on a.level_cd=b.level_cd and a.group_cd = 1
        where mu.user_class_cd = 2 and mu.user_status_cd = 2
        group by mu.id
)A
left join (
            select mu.id, mu.nickname, count(distinct a.material_cd) as Count_Unfinished
            from m_user mu
            inner join t_lesson_schedule b on b.schedule_states_cd = 3 and b.member_id = mu.id
            inner join m_lesson_contents a on a.level_cd=b.level_cd and a.group_cd=1
            left join m_lesson_level mlt on a.material_cd=mlt.level_cd and a.type_cd=0
            left join m_lesson_read_title mlr on a.material_cd=mlr.read_cd and a.type_cd=3
            left join m_lesson_words_title mlw on a.material_cd = mlw.word_cd and a.type_cd=1
            left join m_lesson_video mlv on a.material_cd = mlv.id and a.type_cd=2
            left join m_practice_test_title p on p.practice_test_cd = a.material_cd and a.type_cd=4
            left join t_test_history c on mu.id=c.user_id and c.registered_datetime >= b.scheduled_datetime
                        and (c.level_cd=mlt.level_cd or c.level_cd=mlw.word_cd or c.level_cd=mlv.id or c.read_cd=mlr.read_cd or c.practice_test_cd = p.practice_test_cd)
            where mu.user_class_cd = 2 and mu.user_status_cd = 2 and c.test_id is null
            group by mu.id
        )B on B.id = A.id

